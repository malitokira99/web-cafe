<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=0.99">
    <title>gestion cafetera</title>
    <link rel="stylesheet" href="estilos.css">
    
    <script src="code.js"></script>
    <script src="inicio.js" defer></script>
    <style>
       
    </style>
</head>
<body>
    <header>
        <nav style="display: grid;">
            <h2 id="titulo" style="margin: 0;"></h2>
            <button class="amburgesa" onclick="accion()"><h1 style="margin: 0; padding: 0; width: 100%; cursor: pointer;">☕</h1></button>
            <ul id="menu" style="margin-top: 0;">
                <a href="/lotes" class="menu oculto">Lotes</a>
                <a href="/actividades" class="menu oculto">actividades</a>
                <a href="/inventario" class="menu oculto">inventario</a>
                <a href="/ingresosVSgastos" class="menu oculto">ingresos y gastos</a>
            </ul>
        </nav>
    </header>
    <section id="info_finca"display ="grid"> 
       <div style="display: block;"><div id="data_fin"></div>
       <button id="bdetalles" style="width: max-content; padding: 5px; ">Detalles</button>
    </div> 
        
     
            <div id="weather">
                <h1>Clima Actual en el Líbano Tólima</h1>
            </div>
           
    </section>
    <section id="finta">
        <div id="accesof">
            <h4>estado financiero</h4>
            <form action="#" id="mes-form">
                <label for="meses" id="cmes">Mes</label>
                <select name="meses" id="meses">
                    <option value="enero">Enero</option>
                    <option value="febrero">Febrero</option>
                    <option value="marzo">Marzo</option>
                    <option value="abril">Abril</option>
                    <option value="mayo">Mayo</option>
                    <option value="junio">Junio</option>
                    <option value="julio">Julio</option>
                    <option value="agosto">Agosto</option>
                    <option value="septiembre">Septiembre</option>
                    <option value="octubre">Octubre</option>
                    <option value="noviembre">Noviembre</option>
                    <option value="diciembre">Diciembre</option>
                </select>
            </form>
        </div>
        <div id="festado">
            <div id="fpositivo">
                <h5>ingresos</h5>
                <h6 id="ingresos"> + COP 0 </h6>
            </div>
            <div id="fnegativo">
                <h5>gastos</h5>
                <h6 id="gastos"> - COP 0 </h6>
            </div>
        </div>
        <div class="grafico_barras">
            <div class="columnas">
                <div class="area_grafico">
                    <div class="area_barras" id="area_barras">
                        <!-- Las barras se generarán dinámicamente aquí -->
                    </div>
                    <div class="escalax">
                        <div class="division" id="semana1">Semana 1</div>
                        <div class="division" id="semana2">Semana 2</div>
                        <div class="division" id="semana3">Semana 3</div>
                        <div class="division" id="semana4">Semana 4</div>
                    </div>
                </div>
            </div>
        </div>
    
        <script>
            function actualizarGrafico(mes) {
                fetch('http://localhost:4000/datos')
                    .then(response => response.json())
                    .then(data => {
                        let ingresos = 0;
                        let gastos = 0;
                        const areaBarras = document.getElementById('area_barras');
                        areaBarras.innerHTML = ''; // Limpiar gráfico anterior

                        // Filtrar datos para el mes seleccionado
                        const datosFiltrados = data.filter(item => item.mes.toLowerCase() === mes);

                        // Asegurar que se procesen todas las semanas (1 a 4)
                        const semanas = [1, 2, 3, 4];
                        const maxIngreso = Math.max(...datosFiltrados.map(item => item.ingresos), 0);
                        const maxGasto = Math.max(...datosFiltrados.map(item => item.gastos), 0);
                        const maxValor = Math.max(maxIngreso, maxGasto);

                        semanas.forEach(semana => {
                            const datosSemana = datosFiltrados.find(item => item.semana === semana) || { ingresos: 0, gastos: 0 };

                            ingresos += parseFloat(datosSemana.ingresos || 0);
                            gastos += parseFloat(datosSemana.gastos || 0);

                            const barraCaramelo = document.createElement('div');
                            barraCaramelo.className = 'barra_caramelo barra';
                            barraCaramelo.style.height = (datosSemana.ingresos / maxValor * 90) + '%';
                            barraCaramelo.setAttribute('data-value', `+ COP ${parseFloat(datosSemana.ingresos || 0).toLocaleString()}`);

                            const barraCafe = document.createElement('div');
                            barraCafe.className = 'barra_cafe barra';
                            barraCafe.style.height = (datosSemana.gastos / maxValor * 90) + '%';
                            barraCafe.setAttribute('data-value', `- COP ${parseFloat(datosSemana.gastos || 0).toLocaleString()}`);

                            const division = document.createElement('div');
                            division.className = 'division';
                            division.appendChild(barraCaramelo);
                            division.appendChild(barraCafe);

                            areaBarras.appendChild(division);
                        });

                        document.getElementById('ingresos').innerText = `+ COP ${ingresos.toLocaleString()}`;
                        document.getElementById('gastos').innerText = `- COP ${gastos.toLocaleString()}`;
                    })
                    .catch(error => console.error('Error al cargar datos:', error));
            }

            document.getElementById('meses').addEventListener('change', function() {
                const mes = this.value;
                actualizarGrafico(mes);
            });

            // Mostrar datos del mes actual al cargar la interfaz
            document.addEventListener('DOMContentLoaded', function() {
                const mesActual = new Date().toLocaleString('es-ES', { month: 'long' }).toLowerCase();
                document.getElementById('meses').value = mesActual;
                actualizarGrafico(mesActual);
            });
            document.addEventListener('DOMContentLoaded', () => {
    const fincaSection = document.getElementById('info_finca');
    const fincaId = 2; // Cambia este ID por el que necesites

    fetch(`http://localhost:4000/getFinca/${fincaId}`)
        .then(response => {
            if (!response.ok) throw new Error('Error al obtener los datos de la finca.');
            return response.json();
        })
        .then(data => {
            data_fin.innerHTML = `
                <div style="width:100%;">
                    <h1 style="color: antiquewhite;">Finca ${data.nombre_finca}</h1>
                    <h3>Área: ${data.area_finca}m²</h3>
                    <h3>Altura (msnm): ${data.altura}</h3>
                    <h3>Departamento: ${data.departamento}</h3>
                    <h3>Municipio: ${data.municipio}</h3>
                    
                </div>
            `;
        })
        .catch(error => {
            console.error(error);
            data_fin.innerHTML = `<p>Error al cargar la información de la finca.</p>`;
        });
});

        </script>
        </section>
    </section>
    <div id="detalles_inicio">
        <span class="cerrar" id="cerrarBtn">&times;</span>
       <div class="datos_finca_inicio">
        <header>
            <h1>Informe de Gestión Cafetera</h1>
            
        </header>
        <main>
            <section>
                <h2>Informe de Ingresos y Gastos</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Descripción</th>
                            <th>Monto (COP)</th>
                            <th>Tipo</th>
                        </tr>
                    </thead>
                    <tbody id="ingresos-gastos">
                        <!-- Datos dinámicos -->
                    </tbody>
                </table>
            </section>
    
            <section>
                <h2>Producción de Café por Mes</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Mes</th>
                            <th>Kilos Producidos</th>
                        </tr>
                    </thead>
                    <tbody id="produccion-cafe">
                        <!-- Datos dinámicos -->
                    </tbody>
                </table>
            </section>
    
            <section>
                <h2>Cultivos por Lotes</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Lote</th>
                            <th>Área (m<sup>2</sup>)</th>
                            <th>Tiempo de Cultivo</th>
                        </tr>
                    </thead>
                    <tbody id="cultivo-lotes">
                        <!-- Datos dinámicos -->
                    </tbody>
                </table>
            </section>
        </main>
        <footer>
            <p>Informe generado automáticamente. Fecha: <span id="fecha"></span></p>
            <button onclick="imprimirDatosFinca()">Imprimir</button>
        </footer>
       </div>
       <script>
        //codigo para informe
// script.js
document.getElementById("fecha").textContent = new Date().toLocaleDateString();

// Ejemplo de datos dinámicos
const ingresosGastos = [
    { descripcion: "Venta de café", monto: 500000, tipo: "Ingreso" },
    { descripcion: "Fertilizantes", monto: -200000, tipo: "Gasto" }
];

const produccionCafe = [
    { mes: "Enero", kilos: 1200 },
    { mes: "Febrero", kilos: 1400 }
];

const cultivoLotes = [
    { lote: "Lote A", area: 5000, tiempo: "6 meses" },
    { lote: "Lote B", area: 7000, tiempo: "12 meses" }
];

// Renderizar datos dinámicos
function renderTabla(id, datos, columnas) {
    const tbody = document.getElementById(id);
    tbody.innerHTML = datos.map(d => `<tr>${columnas.map(c => `<td>${d[c]}</td>`).join('')}</tr>`).join('');
}

renderTabla("ingresos-gastos", ingresosGastos, ["descripcion", "monto", "tipo"]);
renderTabla("produccion-cafe", produccionCafe, ["mes", "kilos"]);
renderTabla("cultivo-lotes", cultivoLotes, ["lote", "area", "tiempo"]);

// Función para imprimir
function imprimirPagina() {
    window.print();
}

// script.js
function mostrarSeccion(seccionId) {
    const secciones = document.querySelectorAll("main section");
    secciones.forEach(sec => sec.classList.add("oculto"));
    document.getElementById(seccionId).classList.remove("oculto");
}

// Ejemplo dinámico para agregar ingresos
document.querySelector("form").addEventListener("submit", function(event) {
    event.preventDefault();
    const descripcion = event.target[0].value;
    const monto = event.target[1].value;
    const tipo = event.target[2].value;

    const fila = `
        <tr>
            <td>${descripcion}</td>
            <td>${monto}</td>
            <td>${tipo}</td>
        </tr>
    `;
    document.getElementById("ingresos-tabla").innerHTML += fila;

    // Limpia el formulario
    event.target.reset();
});

function imprimirDatosFinca() {
    const contenido = document.querySelector('.datos_finca_inicio').innerHTML;
    const originalContenido = document.body.innerHTML;

    document.body.innerHTML = `
        <html>
        <head>
            <title>Informe de Gestión Cafetera</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 20px; }
                table { width: 100%; border-collapse: collapse; margin-top: 20px; }
                th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
                th { background-color: #f2f2f2; }
            </style>
        </head>
        <body>
            ${contenido}
        </body>
        </html>
    `;

    window.print();
    document.body.innerHTML = originalContenido;
    location.reload();
}
       </script>
    </div>
    <script>
        document.getElementById("bdetalles").addEventListener('click', function() {
            document.getElementById('detalles_inicio').style.display = 'block';
        });

        document.getElementById('cerrarBtn').addEventListener('click', function() {
            document.getElementById('detalles_inicio').style.display = 'none';
        });
    </script>
</body>
</html>
