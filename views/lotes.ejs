<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lotes</title>
    <link rel="stylesheet" href="estilolote.css">
    <script src="code.js"></script>
    <link rel="icon" href="ramita.png" type="image/x-icon">
</head>
<body>
    <header>
        <nav style="display: grid;">
            <h2 id="titulo" style="margin: 0;">Lotes</h2>
            <button class="amburgesa" onclick="accion()"><h1>‚òï</h1></button>
            <ul id="menu" style="margin-top: 0;">
                <a href="/" class="menu oculto">Inicio</a>
                <a href="/actividades" class="menu oculto">Actividades</a>
                <a href="/inventario" class="menu oculto">Inventario</a>
                <a href="/ingresosVSgastos" class="menu oculto">Ingresos y Gastos</a>
            </ul>
        </nav>
    </header>
    <div class="formulario">
        <form action="/lotes" method="post">
            <!-- Aqu√≠ van los campos del formulario -->
            <label for="nombre" >Nombre:</label>
            <input type="text" id="nombre_lote" name="nombre_lote" placeholder="nombre del lote" required><br>
            <label for="area">√Årea:</label>
            <input type="number" id="area_lote" name="area_lote" required><br>
            <label for="tcultivo" >Cultivo:</label>
            <select name="tipo_cultivo" id="tipo_cultivo" class="desplegable" required>
                <option value="" disabled selected>Selecciona una opci√≥n</option>
                <option value="cafe">Caf√©</option>
                <option value="chocolate">Cacao</option>
                <option value="platano">Pl√°tano</option>
                <option value="menor">Cultivo menor a 6 meses</option>
            </select><br><br>
            <label for="variedad">Variedad:</label>
            <input type="text" id="variedad" name="variedad" required><br>
            <label for="densidad">Densidad:</label>
            <input type="text" id="densidad_siembra" name="densidad_siembra" required><br>
            <label for="fecha_siembra">Fecha de Siembra:</label>
            <input type="date" id="fecha_siembra" name="fecha_siembra" required><br>
            <input type="submit" value="Guardar" id="btlote">
            <br>
        </form>
        <a id="bdetalles"> revisar o eliminar registro</a>
    </div>
<!-- Los registros para eliminar -->
    <div id="detalles_inicio" class="detalles_crud">
        <div class="detalles_crud" id="detalles_inicio">
            <span class="cerrar" id="cerrarBtn">&times;</span>
            <!-- Los registros se agregar√°n aqu√≠ din√°micamente -->
        </div>
    </div>

    <!-- Nueva ventana superpuesta para actualizar-->
        <div class="detalles_crud" id="nueva_ventana" style="display: none;">
            <span class="cerrar" id="cerrarNuevaVentana">&times;</span>
            <!-- Contenido de la nueva ventana -->
                 <h3 style="color: #f2f2f2;">actualizar</h3>
        <table id="lotes-table"  style="width: 100%; border-collapse: collapse; margin-top: 20px;">
        <thead>
            <tr style="background-color: #f2f2f2;">
                <th>ID</th>
                <th>Nombre del Lote</th>
                <th>√Årea del Lote</th>
                <th>Tipo de Cultivo</th>
                <th>Variedad</th>
                <th>Densidad de Siembra</th>
                <th>Fecha de Siembra</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

    
    </table>
        </div>
    
    <script>
        document.getElementById("bdetalles").addEventListener('click', function() {
            document.getElementById('detalles_inicio').style.display = 'block';
        });
    
        document.getElementById('cerrarBtn').addEventListener('click', function() {
            document.getElementById('detalles_inicio').style.display = 'none';
        });
    
        async function obtenerLotes() {
            try {
                const response = await fetch('http://localhost:4000/fechasLotes');
                if (!response.ok) {
                    throw new Error('Error en la solicitud');
                }
                const data = await response.json();
                const detallesInicioDiv = document.getElementById('detalles_inicio');
    
                detallesInicioDiv.innerHTML = '<span class="cerrar" id="cerrarBtn">&times;</span>';
                data.forEach(lote => {
                    const loteElement = document.createElement('div');
                    loteElement.className = 'articulo';
                    loteElement.innerHTML = `
                        <span class="span_f">${lote.nombre_lote}</span>
                        <div class="icons">
                            <i class="refresh-icon">üîÑ</i>
                            <i class="delete-icon" data-id="${lote.id}">üóëÔ∏è</i>
                        </div>
                        <br>
                    `;
                    detallesInicioDiv.appendChild(loteElement);
                });
    
                // A√±adir eventos de clic a los √≠conos de eliminaci√≥n
                document.querySelectorAll('.delete-icon').forEach(icon => {
                    icon.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        eliminarLote(id);
                    });
                });

                // A√±adir evento de clic al icono de refresco para abrir la nueva ventana superpuesta
                document.querySelectorAll('.refresh-icon').forEach(icon => {
                    icon.addEventListener('click', function() {
                        document.getElementById('nueva_ventana').style.display = 'block';
                        document.getElementById('detalles_inicio').style.display = 'none'; // Cerrar "detalles_inicio"
                    });
                });
    
                // Reasignar el evento al bot√≥n cerrar despu√©s de actualizar el contenido
                document.getElementById('cerrarBtn').addEventListener('click', function() {
                    document.getElementById('detalles_inicio').style.display = 'none';
                });

                // A√±adir evento de clic al bot√≥n de cerrar de la nueva ventana
                document.getElementById('cerrarNuevaVentana').addEventListener('click', function() {
                    document.getElementById('nueva_ventana').style.display = 'none';
                });
            } catch (error) {
                document.getElementById('detalles_inicio').innerText = 'Error al cargar los lotes';
                console.error('Error:', error);
            }
        }
    
        async function eliminarLote(id) {
            if (!id) {
                alert('ID no v√°lido');
                return;
            }
            try {
                const response = await fetch(`http://localhost:4000/fechasLotes/${id}`, {
                    method: 'DELETE'
                });
                const result = await response.text();
                alert(result);
                obtenerLotes(); // Recargar los lotes despu√©s de eliminar
            } catch (error) {
                alert('Error al eliminar el lote');
                console.error('Error:', error);
            }
        }
    
        obtenerLotes();
    </script>
</body>
<script>
// Funci√≥n para obtener y mostrar los lotes
function obtenerLotes() {
    fetch('http://localhost:4000/lotesa')
        .then(response => {
            if (!response.ok) {
                throw new Error('Error en la solicitud');
            }
            return response.json();
        })
        .then(data => {
            const tableBody = document.getElementById('lotes-table').getElementsByTagName('tbody')[0];
            tableBody.innerHTML = '';
            data.forEach(lote => {
                const fechaSiembra = new Date(lote.fecha_siembra);
                const fechaFormateada = fechaSiembra.toISOString().split('T')[0]; // Convierte a yyyy-MM-dd
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${lote.id}</td>
                    <td><input type="text" value="${lote.nombre_lote}" data-id="${lote.id}" data-campo="nombre_lote"></td>
                    <td><input type="number" value="${lote.area_lote}" data-id="${lote.id}" data-campo="area_lote"></td>
                    <td><input type="text" value="${lote.tipo_cultivo}" data-id="${lote.id}" data-campo="tipo_cultivo"></td>
                    <td><input type="text" value="${lote.variedad}" data-id="${lote.id}" data-campo="variedad"></td>
                    <td><input type="number" value="${lote.densidad_siembra}" data-id="${lote.id}" data-campo="densidad_siembra"></td>
                    <td><input type="date" value="${fechaFormateada}" data-id="${lote.id}" data-campo="fecha_siembra"></td>
                    <td><button onclick="actualizarLote(${lote.id})">Actualizar</button></td>
                `;
                tableBody.appendChild(row);
            });
        })
        .catch(error => console.error('Error al obtener los lotes:', error));
}


    // Funci√≥n para actualizar un lote
    function actualizarLote(id) {
        const inputs = document.querySelectorAll(`input[data-id="${id}"]`);
        const datosActualizados = {};
        inputs.forEach(input => {
            datosActualizados[input.getAttribute('data-campo')] = input.value;
        });
        fetch(`http://localhost:4000/actualizar-lote/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(datosActualizados)
        })
            .then(response => response.text())
            .then(data => {
                alert(data);
                obtenerLotes();  // Volver a obtener los lotes para reflejar los cambios
            })
            .catch(error => console.error('Error al actualizar el lote:', error));
    }

    // Obtener los lotes cuando la p√°gina se carga
    window.onload = obtenerLotes;
</script>
</html>
