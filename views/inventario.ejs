<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>inventario</title>
    <script src="code.js"></script>
    <link rel="stylesheet" href="estilolote.css">
    <link rel="icon" href="ramita.png" type="image/x-icon">
</head>
<body>
    <header>
            
        <nav style="display: grid;">
           <h2 id="titulo" style="margin: 0;">Inventario</h2>
           <button  class="amburgesa" onclick="accion()"><h1>‚òï</h1></button>
        <ul id="menu " style="margin-top: 0;">
           <a href="/" class="menu oculto" >inicio</a>
           <a href="/lotes" class="menu oculto" >Lotes</a>
           <a href="/actividades" class="menu oculto" >actividades</a>
           <a href="/ingresosVSgastos" class="menu oculto" >ingresos y gastos</a>
        </ul>
        </nav>
   </header>
   
    <div class="formulario">
        <form action="/inventario" method="post">
            <!-- Aqu√≠ van los campos del formulario -->
            <select name="tipo" id="tipo" class="desplegable">
                <option value="" disabled selected>Selecciona una opci√≥n</option>
                <option value="herramienta">herramienta</option>
                <option value="maquina">maquina</option>
                <option value="insumo">insumo</option>
                <option value="equipo">equipo</option>
             </select><br><br>
            <label for="nombre">nombre</label>
            <input type="text" id="nombre" name="nombre" placeholder="nombre de la herramienta" required><br>
            <label for="codigo">codigo</label>
            <input type="int" id="codigo_asignado" name="codigo_asignado" required><br>
            <label for="fcompra">fecha de compra</label>
            <input type="date" id="fecha_compra" name="fecha_compra" required><br>
            <label for="fcompra"> donde esta? </label>
             <select name="ubicacion" id="ubicacion" class="desplegable" required>
                <option value="" disabled selected>Selecciona una opci√≥n</option>
                <option value="almacen">almacen</option>
                <option value="terreno">en terreno</option>
                <option value="reparacion">en reparacion</option>
                <option value="prestada">prestada</option>
                <option value="descompuesta"> da√±ada</option>
             </select><br><br>
            <label for="cuanto">cantidad</label>
            <input type="number" id="cantidad" name="cantidad" required><br>
            <label for="observa">Observaciones</label>
            <textarea name="observaciones" id="observaciones" required></textarea><br>
            <input type="submit" value="Guardar" id="btlote">
            <br>
        </form>
        <a id="bdetalles"> revisar o eliminar registro</a>
    </div>
    <div id="detalles_inicio" class="detalles_crud">
        <div class="detalles_crud" id="detalles_inicio">
            <span class="cerrar" id="cerrarBtn">&times;</span>
            <!-- Los registros se agregar√°n aqu√≠ din√°micamente -->
        </div>
    </div>

    <!-- Nueva ventana superpuesta para actualizar-->
    <div class="detalles_crud" id="nueva_ventana" style="display: none;">
        <span class="cerrar" id="cerrarNuevaVentana">&times;</span>
        <!-- Contenido de la nueva ventana -->
             <h3 style="color: #f2f2f2;">actualizar inventario</h3>
<table id="inventario-table"  style="width: 100%; border-collapse: collapse; margin-top: 20px;">
    <thead>
        <tr style="background-color: #f2f2f2;">
            <th>ID</th>
            <th>Nombre</th>
            <th>Tipo</th>
            <th>codigo asignado</th>
            <th>cantidad</th>
            <th>Fecha de compra</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>


</table>
    </div>
    
    <script>
        document.getElementById("bdetalles").addEventListener('click', function() {
            document.getElementById('detalles_inicio').style.display = 'block';
        });
    
        document.getElementById('cerrarBtn').addEventListener('click', function() {
            document.getElementById('detalles_inicio').style.display = 'none';
        });
    
        async function obtenerLotes() {
            try {
                const response = await fetch('http://localhost:4000/fechas');
                if (!response.ok) {
                    throw new Error('Error en la solicitud');
                }
                const data = await response.json();
                const detallesInicioDiv = document.getElementById('detalles_inicio');
    
                detallesInicioDiv.innerHTML = '<span class="cerrar" id="cerrarBtn">&times;</span>';
                data.forEach(lote => {
                    const loteElement = document.createElement('div');
                    loteElement.className = 'articulo';
                    loteElement.innerHTML = `
                        <span class="span_f">${lote.nombre}</span>
                        <div class="icons">
                            <i class="refresh-icon">üîÑ</i>
                            <i class="delete-icon" data-id="${lote.id}">üóëÔ∏è</i>
                        </div>
                        <br>
                    `;
                    detallesInicioDiv.appendChild(loteElement);
                });
    
                // A√±adir eventos de clic a los √≠conos de eliminaci√≥n
                document.querySelectorAll('.delete-icon').forEach(icon => {
                    icon.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        eliminarLote(id);
                    });
                });

                 // A√±adir evento de clic al icono de refresco para abrir la nueva ventana superpuesta
                 document.querySelectorAll('.refresh-icon').forEach(icon => {
                    icon.addEventListener('click', function() {
                        document.getElementById('nueva_ventana').style.display = 'block';
                        document.getElementById('detalles_inicio').style.display = 'none'; // Cerrar "detalles_inicio"
                    });
                });
                 // Reasignar el evento al bot√≥n cerrar despu√©s de actualizar el contenido
                 document.getElementById('cerrarBtn').addEventListener('click', function() {
                    document.getElementById('detalles_inicio').style.display = 'none';
                });
                 // A√±adir evento de clic al bot√≥n de cerrar de la nueva ventana
                 document.getElementById('cerrarNuevaVentana').addEventListener('click', function() {
                    document.getElementById('nueva_ventana').style.display = 'none';
                });
            } catch (error) {
                document.getElementById('detalles_inicio').innerText = 'Error al cargar los lotes';
                console.error('Error:', error);
            }
        }
    
        async function eliminarLote(id) {
            if (!id) {
                alert('ID no v√°lido');
                return;
            }
            try {
                const response = await fetch(`http://localhost:4000/fechas/${id}`, {
                    method: 'DELETE'
                });
                const result = await response.text();
                alert(result);
                obtenerLotes(); // Recargar los lotes despu√©s de eliminar
            } catch (error) {
                alert('Error al eliminar registro');
                console.error('Error:', error);
            }
        }
    
        obtenerLotes();
    </script>
    
        
    <script>
        // Funci√≥n para obtener y mostrar los lotes
        function obtenerInventario() {
            fetch('http://localhost:4000/obtenerInventario')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Error en la solicitud');
                    }
                    return response.json();
                })
                .then(data => {
                    const tableBody = document.getElementById('inventario-table').getElementsByTagName('tbody')[0];
                    tableBody.innerHTML = '';
                    data.forEach(inventario => {
                        const fecha_compra = new Date(inventario.fecha_compra);
                        const fechaFormateada = fecha_compra.toISOString().split('T')[0]; // Convierte a yyyy-MM-dd
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${inventario.id}</td>
                            <td><input type="text" value="${inventario.nombre}" data-id="${inventario.id}" data-campo="nombre"></td>
                            <td><input type="text" value="${inventario.tipo}" data-id="${inventario.id}" data-campo="tipo"></td>
                            <td><input type="text" value="${inventario.codigo_asignado}" data-id="${inventario.id}" data-campo="codigo_asignado"></td>
                            <td><input type="number" value="${inventario.cantidad}" data-id="${inventario.id}" data-campo="cantidad"></td>
                            <td><input type="date" value="${fechaFormateada}" data-id="${inventario.id}" data-campo="fecha_compra"></td>
                            <td><button onclick="actualizarInventario(${inventario.id})">Actualizar</button></td>
                        `;
                        tableBody.appendChild(row);
                    });
                })
                .catch(error => console.error('Error al obtener el inventario:', error));
        }
        
        // Funci√≥n para actualizar el inventario
        function actualizarInventario(id) {
            const inputs = document.querySelectorAll(`input[data-id="${id}"]`);
            const datosActualizados = {};
            inputs.forEach(input => {
                datosActualizados[input.getAttribute('data-campo')] = input.value;
            });
            fetch(`http://localhost:4000/actualizar-inventario/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(datosActualizados)
            })
                .then(response => response.text())
                .then(data => {
                    alert(data);
                    obtenerInventario();  // Volver a obtener el inventario para reflejar los cambios
                })
                .catch(error => console.error('Error al actualizar el inventario:', error));
        }
        
        // Obtener el inventario cuando la p√°gina se carga
        window.onload = obtenerInventario;
        </script>
</body>
</html>
