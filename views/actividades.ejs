<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>actividades</title>
    <script src="code.js"></script>
    <link rel="stylesheet" href="estilolote.css">
    <link rel="icon" href="ramita.png" type="image/x-icon">
</head>
<body>
    <header>
            
        <nav style="display: grid;">
           <h2 id="titulo" style="margin: 0;">actividades</h2>
           <button  class="amburgesa" onclick="accion()"><h1>‚òï</h1></button>
        <ul id="menu " style="margin-top: 0;">
           <a href="/" class="menu oculto" >inicio</a>
           <a href="/lotes" class="menu oculto" >Lotes</a>
           <a href="/inventario" class="menu oculto" >inventario</a>
           <a href="/ingresosVSgastos" class="menu oculto" >ingresos y gastos</a>
        </ul>
        </nav>
   </header>
    <div class="formulario">
        <form action="/actividades" method="post">
            <!-- Aqu√≠ van los campos del formulario -->
             
            <label for="nombre">Actividad</label>
            <input type="text" id="nombre_actividad" name="nombre_actividad" placeholder="nombre de la actividad"><br>
            <label for="area">responsable</label>
            <input type="text" id="nombre_realizador" name="nombre_realizador" placeholder="nombre de quien hizo el trabajo"><br>
            <label for="jornales">jornales</label>
            <input type="number" id="jornales" name="jornales" placeholder="ingrese el numero de jornales "><br>
            <label for="nombre">insumo utilizado</label>
            <select name="insumo" id="insumo_utilizado_tipo_cultivo" class="desplegable">
                <option value="" disabled selected>Selecciona un tipo de insumo</option>
                <option value="">cargando insumos</option>                
             </select><br><br>
            <label for="fecaha_realizacion">fecha</label>
            <input type="date" id="fecha_realizacion" name="fecha_realizacion"><br>
            <label for="costo">costo total</label>
            <input type="number" id="costo_total" name="costo_total"><br>
            <label for="observa">Observaciones</label>
            <textarea name="observaciones" id="observaciones"></textarea><br>
            <input type="submit" value="Guardar" id="btlote">
            <br>
            <a id="bdetalles"> revisar o eliminar registro</a>
        
        </form>
        <br>
        
    </div>
    <div class="detalles_crud" id="detalles_inicio">
        <span class="cerrar" id="cerrarBtn">&times;</span>
        <!-- Los registros se agregar√°n aqu√≠ din√°micamente -->
    </div>
<div class="detalles_crud" id="nueva_ventana" style="display: none;">
    <span class="cerrar" id="cerrarNuevaVentana">&times;</span>
    <h3 style="color: #f2f2f2;">Actualizar Actividades</h3>
    <table id="actividades-table" style="width: 100%; border-collapse: collapse; margin-top: 20px;">
        <thead>
            <tr style="background-color: #f2f2f2;">
                <th>ID</th>
                <th>Actividad</th>
                <th>Responsable</th>
                <th>Jornales</th>
                <th>Insumo Utilizado</th>
                <th>Fecha</th>
                <th>Costo Total</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

    <script>
        // para mostrar de talles y elimnar registros por fecha
        document.getElementById("bdetalles").addEventListener('click', function() {
            document.getElementById('detalles_inicio').style.display = 'block';
        });
    
        document.getElementById('cerrarBtn').addEventListener('click', function() {
            document.getElementById('detalles_inicio').style.display = 'none';
        });
    
        async function obtenerFechas() {
            try {
                const response = await fetch('http://localhost:4000/fechasActividades');
                if (!response.ok) {
                    throw new Error('Error en la solicitud');
                }
                const data = await response.json();
                const detallesInicioDiv = document.getElementById('detalles_inicio');
                
                detallesInicioDiv.innerHTML = ' <span class="cerrar" id="cerrarBtn">&times;</span>';
                data.forEach(fecha => {
                    const fechaElement = document.createElement('div');
                    fechaElement.className = 'articulo';
                    const fechaCorta = new Date(fecha.fecha_realizacion).toLocaleDateString('es-ES');
                    fechaElement.innerHTML = `
                        <span class="span_f">${fechaCorta}</span>
                        <div class="icons">
                            <i class="refresh-icon">üîÑ</i>
                            <i class="delete-icon" data-id="${fecha.id}">üóëÔ∏è</i>
                        </div>
                        <br>
                    `;
                    detallesInicioDiv.appendChild(fechaElement);
                });
    
                // A√±adir eventos de clic a los √≠conos de eliminaci√≥n
                document.querySelectorAll('.delete-icon').forEach(icon => {
                    icon.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        eliminarFecha(id);
                    });
                });

                // A√±adir eventos de clic a los √≠conos de refresco
                document.querySelectorAll('.refresh-icon').forEach(icon => {
                    icon.addEventListener('click', function() {
                        document.getElementById('nueva_ventana').style.display = 'block';
                        document.getElementById('detalles_inicio').style.display = 'none';
                        obtenerActividades(); // Llamar a la funci√≥n para cargar actividades
                    });
                });

                // Reasignar el evento al bot√≥n cerrar despu√©s de actualizar el contenido
            document.getElementById('cerrarBtn').addEventListener('click', function() {
            document.getElementById('detalles_inicio').style.display = 'none';
        });
            } catch (error) {
                document.getElementById('detalles_inicio').innerText = 'Error al cargar las fechas';
                console.error('Error:', error);
            }
        }
    
        async function eliminarFecha(id) {
            if (!id) {
                alert('ID no v√°lido');
                return;
            }
            try {
                const response = await fetch(`http://localhost:4000/fechasActividades/${id}`, {
                    method: 'DELETE'
                });
                const result = await response.text();
                alert(result);
                obtenerFechas(); // Recargar las fechas despu√©s de eliminar
            } catch (error) {
                alert('Error al eliminar la fecha');
                console.error('Error:', error);
            }
        }
    
        obtenerFechas();
        
    </script>
<script>
    // Evento para abrir la ventana de actividades al pulsar el √≠cono refresh-icon
    document.querySelectorAll('.refresh-icon').forEach(icon => {
        icon.addEventListener('click', function() {
            document.getElementById('nueva_ventana').style.display = 'block';
            document.getElementById('detalles_inicio').style.display = 'none'; // Ocultar detalles
            obtenerActividades(); // Llamar a la funci√≥n para cargar actividades
        });
    });

    // Evento para cerrar la ventana de actividades
    document.getElementById('cerrarNuevaVentana').addEventListener('click', function() {
        document.getElementById('nueva_ventana').style.display = 'none';
    });

    // Funci√≥n para obtener y mostrar las actividades
    async function obtenerActividades() {
        try {
            const response = await fetch('http://localhost:4000/actividadesa');
            if (!response.ok) {
                throw new Error('Error en la solicitud');
            }
            const data = await response.json();
            console.log('Datos recibidos:', data); // Depuraci√≥n
            const tableBody = document.getElementById('actividades-table').getElementsByTagName('tbody')[0];
            tableBody.innerHTML = ''; // Limpiar contenido previo
            data.forEach(actividad => {
                const fechaRealizacion = new Date(actividad.fecha_realizacion);
                const fechaFormateada = fechaRealizacion.toISOString().split('T')[0]; // Formato yyyy-MM-dd
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${actividad.id}</td>
                    <td><input type="text" value="${actividad.nombre_actividad}" data-id="${actividad.id}" data-campo="nombre_actividad"></td>
                    <td><input type="text" value="${actividad.nombre_realizador}" data-id="${actividad.id}" data-campo="nombre_realizador"></td>
                    <td><input type="number" value="${actividad.jornales}" data-id="${actividad.id}" data-campo="jornales"></td>
                    <td><input type="text" value="${actividad.insumo_utilizado}" data-id="${actividad.id}" data-campo="insumo_utilizado"></td>
                    <td><input type="date" value="${fechaFormateada}" data-id="${actividad.id}" data-campo="fecha_realizacion"></td>
                    <td><input type="number" value="${actividad.costo_total}" data-id="${actividad.id}" data-campo="costo_total"></td>
                    <td><button onclick="actualizarActividad(${actividad.id})">Actualizar</button></td>
                `;
                tableBody.appendChild(row);
            });
        } catch (error) {
            console.error('Error al obtener las actividades:', error);
        }
    }

    // Funci√≥n para actualizar una actividad
    function actualizarActividad(id) {
        const inputs = document.querySelectorAll(`input[data-id="${id}"]`);
        const datosActualizados = {};
        inputs.forEach(input => {
            datosActualizados[input.getAttribute('data-campo')] = input.value;
        });
        fetch(`http://localhost:4000/actualizar-actividad/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(datosActualizados)
        })
            .then(response => response.text())
            .then(data => {
                alert(data);
                obtenerActividades(); // Recargar actividades despu√©s de actualizar
            })
            .catch(error => console.error('Error al actualizar la actividad:', error));
    }

    document.addEventListener('DOMContentLoaded', async () => {
    const insumoSelect = document.getElementById('insumo_utilizado_tipo_cultivo');

    try {
        const response = await fetch('http://localhost:4000/insumos');
        if (!response.ok) throw new Error('Error al cargar los insumos');
        const insumos = await response.json();

        // Vaciar y llenar el desplegable
        insumoSelect.innerHTML = '<option value="" disabled selected>Selecciona un tipo de insumo</option>';
        insumos.forEach(insumo => {
            const option = document.createElement('option');
            option.value = insumo.nombre; // Usar el nombre del insumo como value
            option.textContent = insumo.nombre; // Mostrar el nombre del insumo
            insumoSelect.appendChild(option);
        });
    } catch (error) {
        console.error('Error cargando insumos:', error);
        insumoSelect.innerHTML = '<option value="">Error cargando insumos</option>';
    }
});

document.querySelector('form').addEventListener('submit', function(event) {
    const insumo = document.getElementById('insumo_utilizado_tipo_cultivo').value;
    if (!insumo) {
        event.preventDefault();
        alert('Por favor selecciona un insumo.');
    }
});

</script>
    
</body>
</html>
